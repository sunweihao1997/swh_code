'''
2024-4-25
This script is to plot the changes in the DTR between SSP370 and SSP370lowNTCF, comparing with the historical simulation
'''
import xarray as xr
import numpy as np
import os

path_in   =  '/home/sun/data/process/model/aerchemmip-postprocess/dtr_regrid/'

models_label = ['EC-Earth3-AerChem', 'UKESM1-0-LL', 'GFDL-ESM4', 'MRI-ESM2','MPI-ESM-1-2-HAM', 'MIROC6', ] # GISS provide no daily data

type0        = ['dtr']

def calculate_multiple_avgerage(hist_year, furt_year):
    '''
        This function calculate the dtr for each models' realization average and average among the models

        The input was daily, here I only consider JJAS for each year
    '''
    file_listall = os.listdir(path_in) ; file_listall.sort()

    # reference provide lat/lon information
    ref_file = xr.open_dataset(path_in + file_listall[1])
    lat      = ref_file.lat.data ; lon      = ref_file.lon.data

    # Initialize the array
    multiple_model_mean_hist = np.zeros((len(models_label), len(hist_year), len(lat), len(lon)))
    multiple_model_mean_ssp3 = np.zeros((len(models_label), len(furt_year), len(lat), len(lon)))
    multiple_model_mean_ntcf = np.zeros((len(models_label), len(furt_year), len(lat), len(lon)))

    # calculate average for single model
    j = 0 # number for each model
    for mm in models_label:
        # Initialize the array
        single_model_mean_hist = np.zeros((len(hist_year), len(lat), len(lon)))
        single_model_mean_ssp3 = np.zeros((len(furt_year), len(lat), len(lon)))
        single_model_mean_ntcf = np.zeros((len(furt_year), len(lat), len(lon)))

        # collect the subset of different exps
        single_hist = [] ; single_ssp = [] ; single_ntcf = []
        for ff in file_listall:
            if mm in ff and 'hist' in ff:
                single_hist.append(ff)
            elif mm in ff and 'SSP370NTCF' in ff:
                single_ntcf.append(ff)
            elif mm in ff and 'SSP' in ff and 'NTCF' not in ff:
                single_ssp.append(ff)

        if len(single_hist) == len(single_ssp) == len(single_ntcf):
            print(f'Now the collecting process for {mm} has been completed and it is passed number control')

        # Calculate the average for hist
        for ff_single in single_hist:
            f0 = xr.open_dataset(path_in + ff_single)
            # Select JJAS mean
            f0_JJAS = f0.sel(time=f0.time.dt.month.isin([12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]))

            f0_JJAS_mean = f0_JJAS.groupby('time.year').mean()
            #print(np.nanmean(f0_JJAS_mean['dtr']))

            single_model_mean_hist += (f0_JJAS_mean['dtr'] / len(single_hist))

        # Calculate the average for SSP370
        for ff_single in single_ssp:
            f0 = xr.open_dataset(path_in + ff_single)
            # Select JJAS mean
            f0_JJAS = f0.sel(time=f0.time.dt.month.isin([12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]))

            f0_JJAS_mean = f0_JJAS.groupby('time.year').mean()
            #print(np.nanmean(f0_JJAS_mean['dtr']))

            single_model_mean_ssp3 += (f0_JJAS_mean['dtr'] / len(single_hist))

        # Calculate the average for SSP370lowNTCF
        for ff_single in single_ntcf:
            f0 = xr.open_dataset(path_in + ff_single)
            # Select JJAS mean
            f0_JJAS = f0.sel(time=f0.time.dt.month.isin([12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]))

            f0_JJAS_mean = f0_JJAS.groupby('time.year').mean()
            #print(np.nanmean(f0_JJAS_mean['dtr']))

            single_model_mean_ntcf += (f0_JJAS_mean['dtr'] / len(single_hist))

        # add them to the multiple models' array
        multiple_model_mean_hist[j] = single_model_mean_hist
        multiple_model_mean_ssp3[j] = single_model_mean_ssp3
        multiple_model_mean_ntcf[j] = single_model_mean_ntcf

        j += 1

        print(f'Calculation about 3 exps for {mm} have been completed!')
    
    # Write the result into ncfile
    ncfile  =  xr.Dataset(
        {
            "multiple_model_mean_hist":     (["model", "time_hist", "lat", "lon"], multiple_model_mean_hist),     
            "multiple_model_mean_ssp3":     (["model", "time_furt", "lat", "lon"], multiple_model_mean_ssp3),     
            "multiple_model_mean_ntcf":     (["model", "time_furt", "lat", "lon"], multiple_model_mean_ntcf),          
        },
        coords={
            "time_hist": (["time_hist"], hist_year),
            "furt_year": (["furt_year"], furt_year),
            "model":     (["model"],     models_label),
            "lat":  (["lat"],  lat),
            "lon":  (["lon"],  lon),
        },
        )

    ncfile.attrs['description'] = 'Created on 2024-4-26. This file generated by paint_AerChemMIP_dtr_diff_SSP370_NTCF_240416.py. This file saves the JJAS-DTR (dinual temp range) for each year and each model. Temporal resolution is daily.'

    ncfile.to_netcdf('/home/sun/data/process/analysis/AerChem/' + 'DTR_multiple_model_hist_ssp_ntcf_whole_year_dinual_temp_range.nc')


            
                



def plot_change_JJAS_dtr(hist, ssp, sspntcf, left_string, figname, lon, lat, ct_level=np.linspace(-1., 1., 21)):
    '''
    This function is to plot the changes in the wet day among the SSP370 and SSP370lowNTCF

    This figure contains three subplot: 1. changes between SSP370 and historical 2. changes between SSP370lowNTCF and historical 3. NTCF mitigation (ssp370 - ssp370lowNTCF)
    '''
    from matplotlib import cm
    from matplotlib.colors import ListedColormap
    import matplotlib.patches as patches
    import cartopy.crs as ccrs
    import matplotlib.pyplot as plt

    import sys
    sys.path.append("/home/sun/local_code/module/")
    from module_sun import set_cartopy_tick

    # -------   cartopy extent  -----
    lonmin,lonmax,latmin,latmax  =  40,150,-10,60
    extent     =  [lonmin,lonmax,latmin,latmax]

    # -------     figure    -----------
    proj  =  ccrs.PlateCarree()
    fig1    =  plt.figure(figsize=(20,30))
    spec1   =  fig1.add_gridspec(nrows=3,ncols=1)

    left_title = '{}'.format(left_string)
    right_title= ['SSP370 - Hist', 'SSP370lowNTCF - Hist', 'NTCF mitigation']

    pet        = [(ssp - hist)/hist*100, (sspntcf - hist)/hist*100, (ssp - sspntcf)/hist*100]

    # ------      paint    -----------
    for row in range(3):
        col = 0
        ax = fig1.add_subplot(spec1[row,col],projection=proj)

        # 设置刻度
        set_cartopy_tick(ax=ax,extent=extent,xticks=np.linspace(40,150,7,dtype=int),yticks=np.linspace(-10,60,8,dtype=int),nx=1,ny=1,labelsize=25)

        # 添加赤道线
        ax.plot([40,150],[0,0],'k--')

        im  =  ax.contourf(lon, lat, pet[row], ct_level, cmap='coolwarm', alpha=1, extend='both')

        # 海岸线
        ax.coastlines(resolution='50m',lw=1.65)

        ax.set_title(left_title, loc='left', fontsize=16.5)
        ax.set_title(right_title[row], loc='right', fontsize=16.5)

    # 加colorbar
    fig1.subplots_adjust(top=0.8) 
    cbar_ax = fig1.add_axes([0.2, 0.05, 0.6, 0.03]) 
    cb  =  fig1.colorbar(im, cax=cbar_ax, shrink=0.1, pad=0.01, orientation='horizontal')
    cb.ax.tick_params(labelsize=20)

    plt.savefig("/home/sun/paint/AerMIP/AerChemMIP_modelgroup_spatial_JJAS_hist_ssp370_ntcf_{}.png".format(figname))

if __name__ == '__main__':
    # The following function will generate a ncfile, which has been accomplished, the data is '/home/sun/data/process/analysis/AerChem/DTR_multiple_model_hist_ssp_ntcf_JJAS_dinual_temp_range.nc'
    
    #calculate_multiple_avgerage(np.linspace(1985, 2014, 2014-1985+1), np.linspace(2015, 2050, 36))
    f1 = xr.open_dataset('/home/sun/data/process/analysis/AerChem/DTR_multiple_model_hist_ssp_ntcf_whole_year_dinual_temp_range.nc')

    plot_change_JJAS_dtr(np.nanmean(np.nanmean(f1['multiple_model_mean_hist'].data, axis=0), axis=0), np.nanmean(np.nanmean(f1['multiple_model_mean_ssp3'].data, axis=0), axis=0), np.nanmean(np.nanmean(f1['multiple_model_mean_ntcf'].data, axis=0), axis=0), 'Dinual Temp Range (year)', 'Dinual Temp Range (year)', f1.lon.data, f1.lat.data, np.linspace(-10, 10, 21))