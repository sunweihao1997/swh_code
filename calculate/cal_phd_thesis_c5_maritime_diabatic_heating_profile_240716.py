'''
2024-7-16
This script calculate the average vertical profile of diabatic heating over Maritime continent
'''
import xarray as xr
import numpy as np
import os

# ========= File Information =========
path_src = "/home/sun/mydown/MERRA2_diabatic_heating_selection/"

file_list= os.listdir(path_src) ; file_list.sort()

date_file = xr.open_dataset("/home/sun/data/monsoon_onset_anomaly_analysis/onset_day_data/onsetdate.nc")

# ====================================

lat_slice = slice(0, 15) ; lon_slice = slice(110, 130)

climate_profile = np.zeros((42, 5)) #Jan-May
early_profile   = np.zeros((42, 5)) #Jan-May
late_profile    = np.zeros((42, 5)) #Jan-May

onset_avg       = np.average(date_file['bob_onset_date'].data)
onset_std       = np.std(date_file['bob_onset_date'].data)

num_early       = 0
num_late        = 0
num_common      = 0

def extract_list(yyyy, list0):
    single_list = []
    for ff in list0:
        if "tdt_Np." + str(yyyy) in ff:
            single_list.append(ff)
    
    single_list.sort()
    
    return single_list

for yyyy in np.linspace(1981, 2019, 2019 - 1981 + 1, dtype=int):
    onset_day   = date_file['bob_onset_date'].data[yyyy-1981]

    if onset_day <= onset_avg - 0.75*onset_std:

        early_year_list = extract_list(yyyy, file_list)
        if len(early_year_list) == 12:
            num_early += 1
            for i in range(5):
                f1 = xr.open_dataset(path_src + early_year_list[i]).sel(lon=lon_slice, lat=lat_slice)

                early_profile[:, i] += np.average(np.average(np.average(f1['DTDTTOT'].data, axis=0), axis=1), axis=1)

            del early_year_list

    if onset_day >= onset_avg + 0.75*onset_std:

        late_year_list = extract_list(yyyy, file_list)
        if len(late_year_list) == 12:
            num_late += 1
            #print(late_year_list)
            for i in range(5):
                f1 = xr.open_dataset(path_src + late_year_list[i]).sel(lon=lon_slice, lat=lat_slice)

                late_profile[:, i] += np.average(np.average(np.average(f1['DTDTTOT'].data, axis=0), axis=1), axis=1)

            del late_year_list

    common_year_list = extract_list(yyyy, file_list)
    if len(common_year_list) == 12:
        num_common += 1
        for i in range(5):
            f1 = xr.open_dataset(path_src + common_year_list[i]).sel(lon=lon_slice, lat=lat_slice)

            climate_profile[:, i] += np.average(np.average(np.average(f1['DTDTTOT'].data, axis=0), axis=1), axis=1)

        del common_year_list

        print(f"Finish year {yyyy}")

early_profile   /= num_early
late_profile    /= num_late
climate_profile /= num_common

print(num_early) ; print(num_late) ; print(num_common)

ncfile  =  xr.Dataset(
{
    "climate_profile": (["lev", "month"], climate_profile),
    "early_profile":   (["lev", "month"], early_profile),
    "late_profile":    (["lev", "month"], late_profile),
},
coords={
    "lev":   (["lev"], f1.lev.data),
    "month": (["month"], np.array([1, 2, 3, 4, 5])),
},
)
ncfile.attrs['description']  =  'generated by cal_phd_thesis_c5_maritime_diabatic_heating_profile_240716.py'
ncfile.to_netcdf("/home/sun/data/merra2_climate_vars_multi/monthly/Merra_diabatic_physics_maritime.nc")

