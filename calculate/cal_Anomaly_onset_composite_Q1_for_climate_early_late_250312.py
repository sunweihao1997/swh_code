'''
250312
This script servers to calculate the composite average of diabatic heating for the climate, early and late onset years
'''
import numpy as np
import xarray as xr
import os
import math

data_path = "/home/sun/mydown/ERA5/monthly_pressure_diabatic_heating/"

data_list = os.listdir(data_path) ; data_list.sort() #; print(data_list)

# ========== Get the onset date file ============
onset_file = xr.open_dataset("/home/sun/data/monsoon_onset_anomaly_analysis/onset_day_data/ERA5_onset_day_include_early_late_years_new.nc")
#ncfile_all = ncfile.sel(year=onset_file.year.data)
#ncfile_ear = ncfile.sel(year=onset_file.year_early.data)
#ncfile_lat = ncfile.sel(year=onset_file.year_late.data)
#print(onset_file)

# Claim the array for the composite average
q1_climate = np.zeros((12, 32, 721, 1440)) ; num_climate = 42 ; q1_climate_time = np.zeros((12, 32, 721, 1440)) ; q1_climate_advection = np.zeros((12, 32, 721, 1440)) ; q1_climate_vertical = np.zeros((12, 32, 721, 1440)) ; 
q1_early   = np.zeros((12, 32, 721, 1440)) ; num_early   = 0
q1_late    = np.zeros((12, 32, 721, 1440)) ; num_late    = 0

for i in range(42): # start from 1980-2021
    date0 = onset_file["onset_day"].data[i]

    file0 = xr.open_dataset(data_path + data_list[i]) ; print(f"Now it is {data_list[i]}")

    # First off deal with early composite
    if date0 < (np.average(onset_file["onset_day"].data) - np.std(onset_file["onset_day"].data)):
        print(f"Detect the early year! Which is {i + 1980} and the day is {date0}")

        q1_early += file0["diabatic_heating"].data
        num_early += 1

    # Second deal with the late composite
    elif date0 > (np.average(onset_file["onset_day"].data) + np.std(onset_file["onset_day"].data)):
        print(f"Detect the late year! Which is {i + 1980} and the day is {date0}")

        q1_late += file0["diabatic_heating"].data
        num_late += 1

    q1_climate += (file0["diabatic_heating"].data / 42)
    q1_climate_time += (file0["time_term"].data / 42)
    q1_climate_advection += (file0["advection_term"].data / 42)
    q1_climate_vertical  += (file0["vertical_term"].data / 42)

# Calculate the average value
print(f"The total number of early years is {num_early}, and the late is {num_late}")
q1_early = q1_early / num_early ; q1_late = q1_late / num_late

# Write to ncfile
ref_file = xr.open_dataset(data_path + "ERA5_2000_monthly_pressure_diabatic_heating.nc")
ncfile  =  xr.Dataset(
{
    "q1_climate": (["time", "level", "latitude", "longitude"], q1_climate),
    "q1_climate_time": (["time", "level", "latitude", "longitude"], q1_climate_time),
    "q1_climate_advection": (["time", "level", "latitude", "longitude"], q1_climate_advection),
    "q1_climate_vertical": (["time", "level", "latitude", "longitude"], q1_climate_vertical),
    "q1_early":   (["time", "level", "latitude", "longitude"], q1_early),
    "q1_late":    (["time", "level", "latitude", "longitude"], q1_late),
},
coords={
    "time": (["time"], ref_file.time.data),
    "level": (["level"], ref_file.level.data),
    "latitude": (["latitude"], ref_file.latitude.data),
    "longitude": (["longitude"], ref_file.longitude.data),
},
)
ncfile.attrs['description']  =  'Generated by the /home/sun/swh_code/calculate/cal_Anomaly_onset_composite_Q1_for_climate_early_late_250312.py. This file save the early/late composite average of the monthly diabatic heating.'
ncfile.to_netcdf("/home/sun/data/monsoon_onset_anomaly_analysis/process/Composite_early_late_diabatic_heating_monthly.nc")
    
